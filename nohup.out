init success: /data/MicroService-mall/apis/order_api
2024-09-04T03:07:49.468-0400	INFO	initialize/logger.go:20	logger init success
2024-09-04T03:07:49.468-0400	INFO	initialize/logger.go:25	logger init success
2024-09-04T03:07:49.469-0400	INFO	initialize/config.go:30	global.NacosConfig : &config.NacosConfig{Host:"192.168.30.3", Port:8848, Namespace:"74662ca9-2807-48b0-b467-096687999a2e", User:"nacos", Password:"zhaohaihang", Dataid:"order_api.json", Group:"dev"}
2024-09-04T03:07:49.469-0400	INFO	initialize/config.go:31	nacos config context is : &config.NacosConfig{Host:"192.168.30.3", Port:8848, Namespace:"74662ca9-2807-48b0-b467-096687999a2e", User:"nacos", Password:"zhaohaihang", Dataid:"goods_api.json", Group:"dev"}
2024-09-04T03:07:49.477-0400	INFO	initialize/config.go:72	pull nacos config success &config.ApiConfig{Name:"order_api", Host:"192.168.30.6", ServiceInfo:config.Register{Tags:[]string{"order", "api"}, CheckTimeOut:"5s", CheckInterval:"10s", DeregisterTime:"60s"}, ConsulInfo:config.ConsulConfig{Host:"192.168.30.3", Port:8500, Tags:[]string(nil)}, JWTInfo:config.JWTConfig{SigningKey:""}, OrderService:config.OrderServiceConfig{Name:"order_service"}, GoodsService:config.GoodsServiceConfig{Name:"goods_service"}, InventoryService:config.InventoryServiceConfig{Name:"inventory_service"}, AlipayInfo:config.AlipayInfoConfig{AppID:"2021000121665075", PrivateKey:"XXXXX", AliPublicKey:"XXXXX", NotifyURL:"http://120.25.255.207:33389/", ReturnURL:"127.0.0.1:8089"}, JaegerInfo:config.JaegerConfig{Host:"", Port:0}}
2024-09-04T03:07:49.477-0400	INFO	initialize/config.go:73	pull nacos config success &config.ApiConfig{Name:"goods_api", Host:"192.168.30.6", ConsulInfo:config.ConsulConfig{Host:"192.168.30.3", Port:8500}, JWTInfo:config.JWTConfig{SigningKey:"7G(yQ9F0tXHy#EHT0ZIR"}, JaegerInfo:config.JaegerConfig{Host:"192.168.30.3", Port:6831}, ServiceInfo:config.Register{Tags:[]string{"goods", "api"}, CheckTimeOut:"5s", CheckInterval:"10s", DeregisterTime:"60s"}, GoodsServiceInfo:config.GoodsServiceConfig{Name:"goods_service"}}
2024-09-04T03:07:49.477-0400	INFO	initialize/config.go:85	listening nacos config change
2024-09-04T03:07:49.477-0400	INFO	initialize/config.go:86	listening nacos config change
2024-09-04T03:07:49.480-0400	INFO	initialize/translator.go:25	init translator success
2024-09-04T03:07:49.480-0400	INFO	initialize/validator.go:40	init validator
2024-09-04T03:07:49.480-0400	INFO	initialize/service_conn.go:36	order_service conn success
2024-09-04T03:07:49.481-0400	INFO	initialize/service_conn.go:54	goods_service conn success
2024-09-04T03:07:49.481-0400	INFO	initialize/translator.go:24	init translator success
2024-09-04T03:07:49.481-0400	INFO	initialize/service_conn.go:72	inventory_service conn success
2024-09-04T03:07:49.481-0400	INFO	initialize/service_conn.go:33	RPC release mode conn service success
2024-09-04T03:07:49.483-0400	WARN	order_api/main.go:33	release mode 

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

2024-09-04T03:07:49.483-0400	WARN	goods_api/main.go:34	release mode 

[GIN-debug] GET    /order/v1/health          --> github.com/zhaohaihang/order_api/api/health.HealthCheck (3 handlers)
[GIN-debug] GET    /order/v1/orders          --> github.com/zhaohaihang/order_api/api/order.List (6 handlers)
[GIN-debug] POST   /order/v1/orders          --> github.com/zhaohaihang/order_api/api/order.New (6 handlers)
[GIN-debug] GET    /order/v1/orders/:id      --> github.com/zhaohaihang/order_api/api/order.Detail (6 handlers)
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /order/v1/pay/alipy/notify --> github.com/zhaohaihang/order_api/api/pay.Notify (4 handlers)
[GIN-debug] GET    /order/v1/shopcarts       --> github.com/zhaohaihang/order_api/api/shop_cart.ListGoodsInCart (6 handlers)
[GIN-debug] DELETE /order/v1/shopcarts/:id   --> github.com/zhaohaihang/order_api/api/shop_cart.DeleteGoodsInCart (6 handlers)
[GIN-debug] POST   /order/v1/shopcarts       --> github.com/zhaohaihang/order_api/api/shop_cart.AddGoodsToCart (6 handlers)
[GIN-debug] GET    /goods/v1/health          --> github.com/zhaohaihang/goods_api/api/health.HealthCheck (3 handlers)
[GIN-debug] PATCH  /order/v1/shopcarts/:id   --> github.com/zhaohaihang/order_api/api/shop_cart.UpdateGoodsInCart (6 handlers)
[GIN-debug] GET    /goods/v1/banners         --> github.com/zhaohaihang/goods_api/api/banner.List (4 handlers)
[GIN-debug] DELETE /goods/v1/banners/:id     --> github.com/zhaohaihang/goods_api/api/banner.Delete (4 handlers)
[GIN-debug] POST   /goods/v1/banners         --> github.com/zhaohaihang/goods_api/api/banner.New (4 handlers)
[GIN-debug] PUT    /goods/v1/banners/:id     --> github.com/zhaohaihang/goods_api/api/banner.Update (4 handlers)
[GIN-debug] GET    /goods/v1/goods           --> github.com/zhaohaihang/goods_api/api/goods.List (4 handlers)
[GIN-debug] POST   /goods/v1/goods           --> github.com/zhaohaihang/goods_api/api/goods.New (4 handlers)
[GIN-debug] GET    /goods/v1/goods/:id       --> github.com/zhaohaihang/goods_api/api/goods.Detail (4 handlers)
[GIN-debug] DELETE /goods/v1/goods/:id       --> github.com/zhaohaihang/goods_api/api/goods.Delete (4 handlers)
[GIN-debug] PUT    /goods/v1/goods/:id       --> github.com/zhaohaihang/goods_api/api/goods.Update (4 handlers)
[GIN-debug] PATCH  /goods/v1/goods/:id       --> github.com/zhaohaihang/goods_api/api/goods.UpdateStatus (4 handlers)
[GIN-debug] GET    /goods/v1/categorys       --> github.com/zhaohaihang/goods_api/api/category.List (4 handlers)
[GIN-debug] DELETE /goods/v1/categorys/:id   --> github.com/zhaohaihang/goods_api/api/category.Delete (4 handlers)
[GIN-debug] GET    /goods/v1/categorys/:id   --> github.com/zhaohaihang/goods_api/api/category.Detail (4 handlers)
[GIN-debug] POST   /goods/v1/categorys       --> github.com/zhaohaihang/goods_api/api/category.New (4 handlers)
[GIN-debug] PUT    /goods/v1/categorys/:id   --> github.com/zhaohaihang/goods_api/api/category.Update (4 handlers)
[GIN-debug] GET    /goods/v1/brands          --> github.com/zhaohaihang/goods_api/api/brand.List (4 handlers)
[GIN-debug] DELETE /goods/v1/brands/:id      --> github.com/zhaohaihang/goods_api/api/brand.Delete (4 handlers)
[GIN-debug] POST   /goods/v1/brands          --> github.com/zhaohaihang/goods_api/api/brand.New (4 handlers)
[GIN-debug] PUT    /goods/v1/brands/:id      --> github.com/zhaohaihang/goods_api/api/brand.Update (4 handlers)
[GIN-debug] GET    /goods/v1/categorybrands  --> github.com/zhaohaihang/goods_api/api/categoryBrand.List (3 handlers)
[GIN-debug] DELETE /goods/v1/categorybrands/:id --> github.com/zhaohaihang/goods_api/api/categoryBrand.Delete (3 handlers)
[GIN-debug] POST   /goods/v1/categorybrands  --> github.com/zhaohaihang/goods_api/api/categoryBrand.New (3 handlers)
[GIN-debug] PUT    /goods/v1/categorybrands/:id --> github.com/zhaohaihang/goods_api/api/categoryBrand.Update (3 handlers)
[GIN-debug] GET    /goods/v1/categorybrands/:id --> github.com/zhaohaihang/goods_api/api/categoryBrand.Detail (3 handlers)
2024-09-04T03:07:49.484-0400	INFO	initialize/router.go:27	init router success
2024-09-04T03:07:49.484-0400	INFO	initialize/router.go:29	start run goods api router
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on 0.0.0.0:44944
2024-09-04T03:07:49.484-0400	INFO	initialize/router.go:27	init order_api router success
2024-09-04T03:07:49.485-0400	INFO	initialize/router.go:29	start order_api
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on 0.0.0.0:43781
2024/09/04 03:07:49 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024-09-04T03:07:49.493-0400	INFO	mode/release.go:51	Info	{"message": "goods_api register success", "port": 44944, "ID": "6c1a62bf-a964-45a3-b49b-c4e8fe8c242d"}
2024-09-04T03:07:49.495-0400	INFO	mode/release.go:49	Info	{"message": "order_api register success", "port": 43781, "ID": "d79d54e2-6fa5-4c35-af03-bafa7178f028"}
2024-09-04T03:07:49.525-0400	INFO	initialize/logger.go:22	logger init success
2024-09-04T03:07:49.527-0400	INFO	initialize/config.go:33	global.NacosConfig : &config.NacosConfig{Host:"192.168.30.3", Port:8848, Namespace:"74662ca9-2807-48b0-b467-096687999a2e", User:"nacos", Password:"zhaohaihang", Dataid:"user_api.json", Group:"dev"}
2024-09-04T03:07:49.535-0400	INFO	initialize/config.go:76	pull nacos config success &config.ApiConfig{Name:"user_api", Host:"192.168.30.6", ServiceInfo:config.Register{Tags:[]string{"user", "api"}, CheckTimeOut:"5s", CheckInterval:"10s", DeregisterTime:"60s"}, JWTInfo:config.JwtConfig{SigningKey:"7G(yQ9F0tXHy#EHT0ZIR"}, AliSmsInfo:config.AliSmsConfig{ApiKey:"XXXXX", ApiSecret:"XXXX", SignName:"阿里云短信测试", TemplateCode:"SMS_154950909", RegionId:""}, RedisInfo:config.RedisConfig{Host:"192.168.30.3", Port:6380, Password:"123456"}, ConsulInfo:config.ConsulConfig{Host:"192.168.30.3", Port:8500}, JaegerInfo:config.JaegerConfig{Host:"192.168.30.3", Port:6831}, UserServiceInfo:config.UserServiceConfig{Name:"user_service"}}
2024-09-04T03:07:49.536-0400	INFO	initialize/config.go:90	listening nacos config change
2024-09-04T03:07:49.536-0400	INFO	initialize/translator.go:26	init translator success
2024-09-04T03:07:49.536-0400	INFO	initialize/validator.go:40	init validator
2024-09-04T03:07:49.536-0400	INFO	initialize/redis.go:18	redis client init success 

2024-09-04T03:07:49.536-0400	INFO	initialize/service.go:50	RPC release mode conn service success
2024-09-04T03:07:49.539-0400	WARN	user_api/main.go:33	release mode 

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /user_api/v1/swagger/*any --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /user_api/v1/health       --> github.com/zhaohaihang/user_api/api.HealthCheck (3 handlers)
[GIN-debug] GET    /user_api/v1/base/captcha --> github.com/zhaohaihang/user_api/api.GetCaptcha (4 handlers)
[GIN-debug] POST   /user_api/v1/base/note_code --> github.com/zhaohaihang/user_api/api.SendNoteCode (4 handlers)
[GIN-debug] GET    /user_api/v1/user/list    --> github.com/zhaohaihang/user_api/api.GetUserList (6 handlers)
[GIN-debug] POST   /user_api/v1/user/pwd_login --> github.com/zhaohaihang/user_api/api.PasswordLogin (4 handlers)
[GIN-debug] POST   /user_api/v1/user/register --> github.com/zhaohaihang/user_api/api.Register (4 handlers)
2024-09-04T03:07:49.540-0400	INFO	initialize/router.go:29	init user_api router success
2024-09-04T03:07:49.540-0400	INFO	initialize/router.go:31	start user api
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on 0.0.0.0:35974
2024-09-04T03:07:49.544-0400	INFO	mode/release.go:49	Info	{"message": "user_api register success", "port": 35974, "ID": "bd45fb28-1550-41e4-b637-677f3c4f5272"}
2024/09/04 03:08:04 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:08:18 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
init success: /data/MicroService-mall/apis/order_api
2024-09-04T03:08:23.692-0400	INFO	initialize/logger.go:20	logger init success
2024-09-04T03:08:23.693-0400	INFO	initialize/config.go:30	global.NacosConfig : &config.NacosConfig{Host:"192.168.30.3", Port:8848, Namespace:"74662ca9-2807-48b0-b467-096687999a2e", User:"nacos", Password:"zhaohaihang", Dataid:"order_api.json", Group:"dev"}
2024-09-04T03:08:23.694-0400	INFO	initialize/logger.go:25	logger init success
2024-09-04T03:08:23.694-0400	INFO	initialize/config.go:31	nacos config context is : &config.NacosConfig{Host:"192.168.30.3", Port:8848, Namespace:"74662ca9-2807-48b0-b467-096687999a2e", User:"nacos", Password:"zhaohaihang", Dataid:"goods_api.json", Group:"dev"}
2024-09-04T03:08:23.700-0400	INFO	initialize/config.go:73	pull nacos config success &config.ApiConfig{Name:"goods_api", Host:"192.168.30.6", ConsulInfo:config.ConsulConfig{Host:"192.168.30.3", Port:8500}, JWTInfo:config.JWTConfig{SigningKey:"7G(yQ9F0tXHy#EHT0ZIR"}, JaegerInfo:config.JaegerConfig{Host:"192.168.30.3", Port:6831}, ServiceInfo:config.Register{Tags:[]string{"goods", "api"}, CheckTimeOut:"5s", CheckInterval:"10s", DeregisterTime:"60s"}, GoodsServiceInfo:config.GoodsServiceConfig{Name:"goods_service"}}
2024-09-04T03:08:23.700-0400	INFO	initialize/config.go:72	pull nacos config success &config.ApiConfig{Name:"order_api", Host:"192.168.30.6", ServiceInfo:config.Register{Tags:[]string{"order", "api"}, CheckTimeOut:"5s", CheckInterval:"10s", DeregisterTime:"60s"}, ConsulInfo:config.ConsulConfig{Host:"192.168.30.3", Port:8500, Tags:[]string(nil)}, JWTInfo:config.JWTConfig{SigningKey:""}, OrderService:config.OrderServiceConfig{Name:"order_service"}, GoodsService:config.GoodsServiceConfig{Name:"goods_service"}, InventoryService:config.InventoryServiceConfig{Name:"inventory_service"}, AlipayInfo:config.AlipayInfoConfig{AppID:"2021000121665075", PrivateKey:"XXXXX", AliPublicKey:"XXXXX", NotifyURL:"http://120.25.255.207:33389/", ReturnURL:"127.0.0.1:8089"}, JaegerInfo:config.JaegerConfig{Host:"", Port:0}}
2024-09-04T03:08:23.700-0400	INFO	initialize/config.go:86	listening nacos config change
2024-09-04T03:08:23.701-0400	INFO	initialize/config.go:85	listening nacos config change
2024-09-04T03:08:23.704-0400	INFO	initialize/translator.go:25	init translator success
2024-09-04T03:08:23.704-0400	INFO	initialize/validator.go:40	init validator
2024-09-04T03:08:23.704-0400	INFO	initialize/service_conn.go:36	order_service conn success
2024-09-04T03:08:23.704-0400	INFO	initialize/service_conn.go:54	goods_service conn success
2024-09-04T03:08:23.705-0400	INFO	initialize/service_conn.go:72	inventory_service conn success
2024-09-04T03:08:23.707-0400	WARN	order_api/main.go:33	release mode 

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /order/v1/health          --> github.com/zhaohaihang/order_api/api/health.HealthCheck (3 handlers)
[GIN-debug] GET    /order/v1/orders          --> github.com/zhaohaihang/order_api/api/order.List (6 handlers)
[GIN-debug] POST   /order/v1/orders          --> github.com/zhaohaihang/order_api/api/order.New (6 handlers)
[GIN-debug] GET    /order/v1/orders/:id      --> github.com/zhaohaihang/order_api/api/order.Detail (6 handlers)
[GIN-debug] POST   /order/v1/pay/alipy/notify --> github.com/zhaohaihang/order_api/api/pay.Notify (4 handlers)
[GIN-debug] GET    /order/v1/shopcarts       --> github.com/zhaohaihang/order_api/api/shop_cart.ListGoodsInCart (6 handlers)
[GIN-debug] DELETE /order/v1/shopcarts/:id   --> github.com/zhaohaihang/order_api/api/shop_cart.DeleteGoodsInCart (6 handlers)
[GIN-debug] POST   /order/v1/shopcarts       --> github.com/zhaohaihang/order_api/api/shop_cart.AddGoodsToCart (6 handlers)
[GIN-debug] PATCH  /order/v1/shopcarts/:id   --> github.com/zhaohaihang/order_api/api/shop_cart.UpdateGoodsInCart (6 handlers)
2024-09-04T03:08:23.708-0400	INFO	initialize/router.go:27	init order_api router success
2024-09-04T03:08:23.708-0400	INFO	initialize/router.go:29	start order_api
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on 0.0.0.0:37023
2024-09-04T03:08:23.711-0400	INFO	initialize/logger.go:24	logger init success
2024-09-04T03:08:23.712-0400	INFO	mode/release.go:49	Info	{"message": "order_api register success", "port": 37023, "ID": "1ed8057d-4001-4237-9f63-233875fe326e"}
2024-09-04T03:08:23.744-0400	FATAL	initialize/sentinel.go:13	init sentinel failed 	{"err": "failed to initialize metric log writer: remove /root/logs/csp/unknown_go_service-metrics.log.2024-09-01.1.idx: no such file or directory", "errVerbose": "remove /root/logs/csp/unknown_go_service-metrics.log.2024-09-01.1.idx: no such file or directory\nfailed to initialize metric log writer\ngithub.com/alibaba/sentinel-golang/core/log/metric.(*DefaultMetricLogWriter).initialize\n\t/root/go/pkg/mod/github.com/alibaba/sentinel-golang@v1.0.4/core/log/metric/writer.go:277\ngithub.com/alibaba/sentinel-golang/core/log/metric.NewDefaultMetricLogWriterOfApp\n\t/root/go/pkg/mod/github.com/alibaba/sentinel-golang@v1.0.4/core/log/metric/writer.go:315\ngithub.com/alibaba/sentinel-golang/core/log/metric.NewDefaultMetricLogWriter\n\t/root/go/pkg/mod/github.com/alibaba/sentinel-golang@v1.0.4/core/log/metric/writer.go:290\ngithub.com/alibaba/sentinel-golang/core/log/metric.InitTask.func1\n\t/root/go/pkg/mod/github.com/alibaba/sentinel-golang@v1.0.4/core/log/metric/aggregator.go:52\nsync.(*Once).doSlow\n\t/root/.gvm/gos/go1.21.0/src/sync/once.go:74\nsync.(*Once).Do\n\t/root/.gvm/gos/go1.21.0/src/sync/once.go:65\ngithub.com/alibaba/sentinel-golang/core/log/metric.InitTask\n\t/root/go/pkg/mod/github.com/alibaba/sentinel-golang@v1.0.4/core/log/metric/aggregator.go:46\ngithub.com/alibaba/sentinel-golang/api.initCoreComponents\n\t/root/go/pkg/mod/github.com/alibaba/sentinel-golang@v1.0.4/api/init.go:85\ngithub.com/alibaba/sentinel-golang/api.initSentinel\n\t/root/go/pkg/mod/github.com/alibaba/sentinel-golang@v1.0.4/api/init.go:153\ngithub.com/alibaba/sentinel-golang/api.InitDefault\n\t/root/go/pkg/mod/github.com/alibaba/sentinel-golang@v1.0.4/api/init.go:37\ngithub.com/zhaohaihang/goods_api/initialize.InitSentinel\n\t/data/MicroService-mall/apis/goods_api/initialize/sentinel.go:11\nmain.main\n\t/data/MicroService-mall/apis/goods_api/main.go:21\nruntime.main\n\t/root/.gvm/gos/go1.21.0/src/runtime/proc.go:267\nruntime.goexit\n\t/root/.gvm/gos/go1.21.0/src/runtime/asm_amd64.s:1650"}
2024-09-04T03:08:23.762-0400	INFO	initialize/config.go:32	nacos config context is : &config.NacosConfig{Host:"192.168.30.3", Port:8848, Namespace:"74662ca9-2807-48b0-b467-096687999a2e", User:"nacos", Password:"zhaohaihang", Dataid:"userop_api.json", Group:"dev"}
2024-09-04T03:08:23.768-0400	INFO	initialize/config.go:77	pull nacos config success &config.ApiConfig{Name:"userop_api", Host:"192.168.30.6", ServiceInfo:config.Register{Tags:[]string{"userop", "api"}, CheckTimeOut:"5s", CheckInterval:"10s", DeregisterTime:"60s"}, ConsulInfo:config.ConsulConfig{Host:"192.168.30.3", Port:8500, Tags:[]string(nil)}, JWTInfo:config.JWTConfig{SigningKey:""}, UseropService:config.UserOPServiceConfig{Name:"userop_service"}, GoodsService:config.GoodsServiceConfig{Name:"goods_service"}, JaegerInfo:config.JaegerConfig{Host:"192.168.30.3", Port:14268}}
2024-09-04T03:08:23.768-0400	INFO	initialize/config.go:90	listening nacos config change
2024-09-04T03:08:23.769-0400	INFO	initialize/translator.go:26	init translator success
2024-09-04T03:08:23.769-0400	INFO	initialize/validator.go:41	mobile load validation success
2024-09-04T03:08:23.770-0400	INFO	initialize/service_conn.go:33	userop_service conn success
2024-09-04T03:08:23.770-0400	INFO	initialize/service_conn.go:53	goods_service conn success
2024-09-04T03:08:23.772-0400	INFO	initialize/logger.go:22	logger init success
2024-09-04T03:08:23.773-0400	WARN	userop_api/main.go:32	release mode 

2024-09-04T03:08:23.773-0400	INFO	initialize/config.go:33	global.NacosConfig : &config.NacosConfig{Host:"192.168.30.3", Port:8848, Namespace:"74662ca9-2807-48b0-b467-096687999a2e", User:"nacos", Password:"zhaohaihang", Dataid:"user_api.json", Group:"dev"}
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /userop/v1/health         --> github.com/zhaohaihang/userop_api/api/health.HealthCheck (3 handlers)
[GIN-debug] GET    /userop/v1/message        --> github.com/zhaohaihang/userop_api/api/message.ListMessage (5 handlers)
[GIN-debug] POST   /userop/v1/message        --> github.com/zhaohaihang/userop_api/api/message.CreateMessage (5 handlers)
[GIN-debug] GET    /userop/v1/address        --> github.com/zhaohaihang/userop_api/api/address.ListAddress (5 handlers)
[GIN-debug] DELETE /userop/v1/address/:id    --> github.com/zhaohaihang/userop_api/api/address.DeleteAddress (5 handlers)
[GIN-debug] POST   /userop/v1/address        --> github.com/zhaohaihang/userop_api/api/address.CreateAddress (5 handlers)
[GIN-debug] PUT    /userop/v1/address/:id    --> github.com/zhaohaihang/userop_api/api/address.UpdateAddress (5 handlers)
[GIN-debug] GET    /userop/v1/userfavs       --> github.com/zhaohaihang/userop_api/api/userFavorite.ListFavorite (5 handlers)
[GIN-debug] POST   /userop/v1/userfavs       --> github.com/zhaohaihang/userop_api/api/userFavorite.CreateFavorite (5 handlers)
[GIN-debug] GET    /userop/v1/userfavs/:id   --> github.com/zhaohaihang/userop_api/api/userFavorite.DetailFavorite (5 handlers)
[GIN-debug] DELETE /userop/v1/userfavs/:id   --> github.com/zhaohaihang/userop_api/api/userFavorite.DeleteFavorite (5 handlers)
2024-09-04T03:08:23.774-0400	INFO	initialize/router.go:28	init userop router success
2024-09-04T03:08:23.774-0400	INFO	initialize/router.go:30	start userop api
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on 0.0.0.0:37324
2024-09-04T03:08:23.778-0400	INFO	mode/release.go:49	Info	{"message": "userop_api register success", "port": 37324, "ID": "89c9483d-fd06-4c46-bc6a-780271c1f758"}
2024-09-04T03:08:23.779-0400	INFO	initialize/config.go:76	pull nacos config success &config.ApiConfig{Name:"user_api", Host:"192.168.30.6", ServiceInfo:config.Register{Tags:[]string{"user", "api"}, CheckTimeOut:"5s", CheckInterval:"10s", DeregisterTime:"60s"}, JWTInfo:config.JwtConfig{SigningKey:"7G(yQ9F0tXHy#EHT0ZIR"}, AliSmsInfo:config.AliSmsConfig{ApiKey:"XXXXX", ApiSecret:"XXXX", SignName:"阿里云短信测试", TemplateCode:"SMS_154950909", RegionId:""}, RedisInfo:config.RedisConfig{Host:"192.168.30.3", Port:6380, Password:"123456"}, ConsulInfo:config.ConsulConfig{Host:"192.168.30.3", Port:8500}, JaegerInfo:config.JaegerConfig{Host:"192.168.30.3", Port:6831}, UserServiceInfo:config.UserServiceConfig{Name:"user_service"}}
2024-09-04T03:08:23.780-0400	INFO	initialize/config.go:90	listening nacos config change
2024-09-04T03:08:23.781-0400	INFO	initialize/translator.go:26	init translator success
2024-09-04T03:08:23.781-0400	INFO	initialize/validator.go:40	init validator
2024-09-04T03:08:23.781-0400	INFO	initialize/redis.go:18	redis client init success 

2024-09-04T03:08:23.782-0400	INFO	initialize/service.go:50	RPC release mode conn service success
2024-09-04T03:08:23.785-0400	WARN	user_api/main.go:33	release mode 

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /user_api/v1/swagger/*any --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /user_api/v1/health       --> github.com/zhaohaihang/user_api/api.HealthCheck (3 handlers)
[GIN-debug] GET    /user_api/v1/base/captcha --> github.com/zhaohaihang/user_api/api.GetCaptcha (4 handlers)
[GIN-debug] POST   /user_api/v1/base/note_code --> github.com/zhaohaihang/user_api/api.SendNoteCode (4 handlers)
[GIN-debug] GET    /user_api/v1/user/list    --> github.com/zhaohaihang/user_api/api.GetUserList (6 handlers)
[GIN-debug] POST   /user_api/v1/user/pwd_login --> github.com/zhaohaihang/user_api/api.PasswordLogin (4 handlers)
[GIN-debug] POST   /user_api/v1/user/register --> github.com/zhaohaihang/user_api/api.Register (4 handlers)
2024-09-04T03:08:23.786-0400	INFO	initialize/router.go:29	init user_api router success
2024-09-04T03:08:23.786-0400	INFO	initialize/router.go:31	start user api
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on 0.0.0.0:45442
2024-09-04T03:08:23.790-0400	INFO	mode/release.go:49	Info	{"message": "user_api register success", "port": 45442, "ID": "84a04384-ceae-4aee-8852-19743f95add9"}
2024/09/04 03:08:32 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:08:47 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:09:01 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:09:16 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:09:30 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:09:45 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:09:45 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:09:59 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:10:14 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:10:28 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:10:43 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:10:57 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:11:12 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:11:26 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:11:41 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:11:56 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:12:10 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:12:24 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:12:39 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:12:53 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:13:08 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:13:22 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
2024/09/04 03:13:36 ERROR: [Consul resolver] Couldn't update client connection. error={bad resolver state}
